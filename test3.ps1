Function Get-PerformanceCounterLocalName { param([UInt32]$ID,$ComputerName = $env:COMPUTERNAME); $code = \'[DllImport("pdh.dll", SetLastError=true, CharSet=CharSet.Unicode)] public static extern UInt32 PdhLookupPerfNameByIndex(string szMachineName, uint dwNameIndex, System.Text.StringBuilder szNameBuffer, ref uint pcchNameBufferSize);\'; $Buffer = New-Object System.Text.StringBuilder(1024); [UInt32]$BufferSize = $Buffer.Capacity;  $t = Add-Type -MemberDefinition $code -PassThru -Name PerfCounter -Namespace Utility;  $rv = $t::PdhLookupPerfNameByIndex($ComputerName, $id, $Buffer, [Ref]$BufferSize);  if ($rv -eq 0)  {    $Buffer.ToString().Substring(0, $BufferSize-1);  }  else  {    Throw \'Get-PerformanceCounterLocalName : Unable to retrieve localized name. Check computer name and performance counter ID.\';  }}function Get-PerformanceCounterId{    param    (        [Parameter(Mandatory=$true)]        $Name    );    if ($script:perfHash -eq $null)    {        Write-Progress -Activity \'Retrieving PerfIDs\' -Status \'Working\';        $key = \'Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Perflib\CurrentLanguage\';        $counters = (Get-ItemProperty -Path $key -Name Counter).Counter;        $script:perfHash = @{};        $all = $counters.Count;        for($i = 0; $i -lt $all; $i+=2)        {           Write-Progress -Activity \'Retrieving PerfIDs\' -Status \'Working\' -PercentComplete ($i*100/$all);           $script:perfHash.$($counters[$i+1]) = $counters[$i];        }    }    $script:perfHash.$Name; }$_ID = Get-PerformanceCounterId -Name \'id process\'; $_Process = Get-PerformanceCounterId -Name \'Process\'; $_PrivateWorkingSet = Get-PerformanceCounterId -Name \'Working Set - Private\'; $_ProcessTime = Get-PerformanceCounterId -Name \'% processor time\'; $IDP = Get-PerformanceCounterLocalName $_ID; $Process = Get-PerformanceCounterLocalName $_Process; $PrivateWorkingSet = Get-PerformanceCounterLocalName $_PrivateWorkingSet; $ProcessTime = Get-PerformanceCounterLocalName $_ProcessTime; Get-Counter -Counter "\$Process(*)\$PrivateWorkingSet", "\$Process(*)\$ProcessTime", "\$Process(*)\$IDP" -ErrorAction SilentlyContinue;